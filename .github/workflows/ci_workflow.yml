---

name: PyArr CI

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  black:
    name: Check PyArr formatting with Black
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Black Check
        uses: lgeiger/black-action@master
        with:
          args: ". --check"
  build-n-publish:
    name: Build and publish PyArr üêç distribution üì¶ to PyPI
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [black]
    runs-on: ubuntu-18.04
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@master
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Build
        run: poetry build
      - name: Publish distribution üì¶ to PyPI
        run: poetry publish -u __token__ -p ${{ secrets.pypi_password }}
